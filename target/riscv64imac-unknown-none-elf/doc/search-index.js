const searchIndex = new Map(JSON.parse('[\
["bit_field",{"doc":"Provides the abstraction of a bit field, which allows for …","t":"TKKMMMMMMMMM","n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":[[0,"bit_field"],[12,"core::ops::range"]],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[3,0,0,1,3,1,3,1,3,1,3,1],"f":[0,0,0,[1,2],[[3,2],4],[[1,2],4],[[3,-1],3,[[5,[2]]]],[[1,-1],-2,[[5,[2]]],3],[[3,2,4],3],[[1,2,4],6],[[3,-1,3],3,[[5,[2]]]],[[1,-1,-2],6,[[5,[2]]],3]],"c":[],"p":[[10,"BitArray",0],[1,"usize"],[10,"BitField",0],[1,"bool"],[10,"RangeBounds",12],[1,"tuple"]],"b":[]}],\
["critical_section",{"doc":"critical-section","t":"FKFIFHMNNNNNNNNNNNNNNNNNNNNNNNNNHMNNQNNNNNNNNNNH","n":["CriticalSection","Impl","Mutex","RawRestoreState","RestoreState","acquire","acquire","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_ref","borrow_ref_mut","clone","clone","fmt","fmt","fmt","from","from","from","get_mut","into","into","into","into_inner","invalid","new","new","release","release","replace","replace_with","set_impl","take","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with"],"q":[[0,"critical_section"],[48,"core::cell"],[49,"core::cell"],[50,"core::fmt"],[51,"core::default"],[52,"core::result"],[53,"core::any"]],"d":["Critical section token.","Methods required for a critical section implementation.","A mutex based on critical sections.","Raw, transparent “restore state”.","Opaque “restore state”.","Acquire a critical section in the current thread.","Acquire the critical section.","","Borrows the data for the duration of the critical section.","","","","","","Borrow the data and call <code>RefCell::borrow</code>","Borrow the data and call <code>RefCell::borrow_mut</code>","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a mutable reference to the contained value when the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the contained value, consuming the mutex.","Create an invalid, dummy  <code>RestoreState</code>.","Creates a new mutex.","Creates a critical section token.","Release the critical section.","Release the critical section.","Borrow the data and call <code>RefCell::replace</code>","Borrow the data and call <code>RefCell::replace_with</code>","Set the critical section implementation.","Borrow the data and call <code>RefCell::take</code>","","","","","","","","","","Execute closure <code>f</code> in a critical section."],"i":[0,0,0,0,0,0,17,3,3,4,1,3,4,1,3,3,4,1,3,4,1,3,4,1,3,3,4,1,3,1,3,4,0,17,3,3,0,3,3,4,1,3,4,1,3,4,1,0],"f":[0,0,0,0,0,[[],1],[[],2],[-1,-2,[],[]],[[[3,[-1]],4],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[[5,[-1]]]],4],[[6,[-1]]],[]],[[[3,[[5,[-1]]]],4],[[7,[-1]]],[]],[4,4],[1,1],[[[3,[-1]],8],9,10],[[4,8],9],[[1,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[-1]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],-1,[]],[[],1],[-1,[[3,[-1]]],[]],[[],4],[1,11],[2,11],[[[3,[[5,[-1]]]],4,-1],-1,[]],[[[3,[[5,[-1]]]],4,-2],-1,[],[[13,[-1],[[12,[-1]]]]]],0,[[[3,[[5,[-1]]]],4],-1,14],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-2,-1,[],[[13,[4],[[12,[-1]]]]]]],"c":[],"p":[[5,"RestoreState",0],[8,"RawRestoreState",0],[5,"Mutex",0],[5,"CriticalSection",0],[5,"RefCell",48],[5,"Ref",48],[5,"RefMut",48],[5,"Formatter",49],[8,"Result",49],[10,"Debug",49],[1,"tuple"],[17,"Output"],[10,"FnOnce",50],[10,"Default",51],[6,"Result",52],[5,"TypeId",53],[10,"Impl",0]],"b":[]}],\
["embedded_hal",{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","t":"RKCCCCMMCMMCCMCCCCCCCCCKRRMMKKMMKRRRRRRRGKPIIKKKPKKKNNNMMNNNMNNNMMMMRKMMCKRRRGKKPKPNNNMNNNCMNNNCMKKPPPKGPFPKGTTPPPFPTTNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNMNNNNNMMNMNCMNNMNNNNNNNNNNNNNNNNKRRMMCCCCKMMFNNNNNNNNNNNNNRPPKGNNNNNNNNNMMNNNNEEEEEEEEEEEEEERRKKMMMNPPRKPPSSSSFGGNNNNNNNNNNNNNNNNNNOOMMNNNNNNNNNKKRKRMMM","n":["Duty","PwmPin","adc","blocking","can","digital","disable","enable","fmt","get_duty","get_max_duty","prelude","serial","set_duty","spi","timer","watchdog","can","delay","i2c","rng","serial","spi","Can","Error","Frame","receive","transmit","DelayMs","DelayUs","delay_ms","delay_us","AddressMode","Error","Error","Error","Error","Error","Error","Error","Operation","Read","Read","SevenBitAddress","TenBitAddress","Transactional","TransactionalIter","Write","Write","WriteIter","WriteIterRead","WriteRead","borrow","borrow_mut","eq","exec","exec_iter","fmt","from","into","read","try_from","try_into","type_id","write","write","write_iter_read","write_read","Error","Write","bflush","bwrite_all","write","Default","Error","Error","Error","Operation","Transactional","Transfer","Transfer","Write","Write","borrow","borrow_mut","eq","exec","fmt","from","into","transfer","transfer","try_from","try_into","type_id","write","write","Default","Default","Acknowledge","Bit","Crc","Error","ErrorKind","Extended","ExtendedId","Form","Frame","Id","MAX","MAX","Other","Overrun","Standard","StandardId","Stuff","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","data","dlc","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","id","into","into","into","into","is_data_frame","is_extended","is_remote_frame","is_standard","kind","kind","nb","new","new","new","new_remote","new_unchecked","new_unchecked","partial_cmp","standard_id","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Can","Error","Frame","receive","transmit","v1","v1_compat","v2","v2_compat","OutputPin","set_high","set_low","OldOutputPin","borrow","borrow_mut","from","from","into","new","set_high","set_high","set_low","set_low","try_from","try_into","type_id","Error","High","Low","OutputPin","PinState","borrow","borrow_mut","clone","eq","fmt","from","from","into","not","set_high","set_low","set_state","try_from","try_into","type_id","_embedded_hal_PwmPin","_embedded_hal_blocking_delay_DelayMs","_embedded_hal_blocking_delay_DelayUs","_embedded_hal_blocking_i2c_Read","_embedded_hal_blocking_i2c_Write","_embedded_hal_blocking_i2c_WriteRead","_embedded_hal_blocking_serial_Write","_embedded_hal_blocking_spi_Transfer","_embedded_hal_blocking_spi_Write","_embedded_hal_digital_OutputPin","_embedded_hal_serial_Read","_embedded_hal_serial_Write","_embedded_hal_spi_FullDuplex","_embedded_hal_timer_CountDown","Error","Error","Read","Write","flush","read","write","write_str","CaptureOnFirstTransition","CaptureOnSecondTransition","Error","FullDuplex","IdleHigh","IdleLow","MODE_0","MODE_1","MODE_2","MODE_3","Mode","Phase","Polarity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","eq","eq","eq","from","from","from","into","into","into","phase","polarity","read","send","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Cancel","CountDown","Error","Periodic","Time","cancel","start","wait"],"q":[[0,"embedded_hal"],[17,"embedded_hal::blocking"],[23,"embedded_hal::blocking::can"],[28,"embedded_hal::blocking::delay"],[32,"embedded_hal::blocking::i2c"],[68,"embedded_hal::blocking::serial"],[73,"embedded_hal::blocking::serial::write"],[74,"embedded_hal::blocking::spi"],[97,"embedded_hal::blocking::spi::transfer"],[98,"embedded_hal::blocking::spi::write"],[99,"embedded_hal::can"],[183,"embedded_hal::can::nb"],[188,"embedded_hal::digital"],[192,"embedded_hal::digital::v1"],[195,"embedded_hal::digital::v1_compat"],[209,"embedded_hal::digital::v2"],[229,"embedded_hal::prelude"],[243,"embedded_hal::serial"],[251,"embedded_hal::spi"],[295,"embedded_hal::timer"],[303,"core::result"],[304,"core::iter::traits::collect"],[305,"core::fmt"],[306,"core::fmt"],[307,"core::cmp"],[308,"core::fmt"],[309,"core::option"],[310,"core::convert"],[311,"nb"],[312,"void"]],"d":["Type for the <code>duty</code> methods","A single PWM channel / pin","Analog-digital conversion traits","Blocking API","Controller Area Network","Digital I/O","Disables a PWM <code>channel</code>","Enables a PWM <code>channel</code>","Implementation of <code>core::fmt::Write</code> for the HAL’s …","Returns the current duty cycle","Returns the maximum duty cycle value","The prelude is a collection of all the traits in this crate","Serial interface","Sets a new duty cycle","Serial Peripheral Interface","Timers","Traits for interactions with a processors watchdog timer.","Blocking CAN API","Delays","Blocking I2C API","Blocking hardware random number generator","Blocking serial API","Blocking SPI API","A blocking CAN interface that is able to transmit and …","Associated error type.","Associated frame type.","Blocks until a frame was received or an error occured.","Puts a frame in the transmit buffer. Blocks until space is …","Millisecond delay","Microsecond delay","Pauses execution for <code>ms</code> milliseconds","Pauses execution for <code>us</code> microseconds","Address mode (7-bit / 10-bit)","Error type","Error type","Error type","Error type","Error type","Error type","Error type","Transactional I2C operation.","Blocking read","Read data into the provided buffer","7-bit address mode type","10-bit address mode type","Transactional I2C interface.","Transactional I2C interface (iterator version).","Blocking write","Write data from the provided buffer","Blocking write (iterator version)","Blocking write (iterator version) + read","Blocking write + read","","","","Execute the provided operations on the I2C bus.","Execute the provided operations on the I2C bus (iterator …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>","","","","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code> and then reads …","Writes bytes to slave with address <code>address</code> and then reads …","The type of error that can occur when writing","Write half of a serial interface (blocking variant)","Block until the serial interface has sent all buffered …","Writes a slice, blocking until everything has been written","Blocking serial write","Marker trait to opt into default blocking write …","Error type","Error type","Associated error type","Operation for transactional SPI trait","Transactional trait allows multiple actions to be executed …","Blocking transfer","Write data out while reading data into the provided buffer","Blocking write","Write data from the provided buffer, discarding read data","","","","Execute the provided transactions","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Blocking transfer","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …","","","","Blocking write","Sends <code>words</code> to the slave, ignoring all the incoming words","Default implementation of <code>blocking::spi::Transfer&lt;W&gt;</code> for …","Default implementation of <code>blocking::spi::Write&lt;W&gt;</code> for …","An ACK  error shall be detected by a transmitter whenever …","A bit error is detected at that bit time when the bit …","Calculated CRC sequence does not equal the received one.","CAN error","CAN error kind","Extended 29-bit Identifier (<code>0..=0x1FFF_FFFF</code>).","Extended 29-bit CAN Identifier (<code>0..=1FFF_FFFF</code>).","A form error shall be detected when a fixed-form bit field …","A CAN2.0 Frame","A CAN Identifier (standard or extended).","CAN ID <code>0x7FF</code>, the lowest priority.","CAN ID <code>0x1FFFFFFF</code>, the lowest priority.","A different error occurred. The original error may contain …","The peripheral receive buffer was overrun.","Standard 11-bit Identifier (<code>0..=0x7FF</code>).","Standard 11-bit CAN Identifier (<code>0..=0x7FF</code>).","A stuff error is detected at the bit time of the sixth …","CAN ID <code>0</code>, the highest priority.","CAN ID <code>0</code>, the highest priority.","Returns this CAN Identifier as a raw 16-bit integer.","Returns this CAN Identifier as a raw 32-bit integer.","","","","","","","","","","","","","","Returns the frame data (0..8 bytes in length).","Returns the data length code (DLC) which is in the range …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the frame identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this frame is a data frame.","Returns true if this frame is a extended frame.","Returns true if this frame is a remote frame.","Returns true if this frame is a standard frame.","Convert error to a generic CAN error kind","","Non-blocking CAN API","Creates a new frame.","Tries to create a <code>StandardId</code> from a raw 16-bit integer.","Tries to create a <code>ExtendedId</code> from a raw 32-bit integer.","Creates a new remote frame (RTR bit set).","Creates a new <code>StandardId</code> without checking if it is inside …","Creates a new <code>ExtendedId</code> without checking if it is inside …","","Returns the Base ID part of this extended identifier.","","","","","","","","","","","","","A CAN interface that is able to transmit and receive …","Associated error type.","Associated frame type.","Returns a received frame if available.","Puts a frame in the transmit buffer to be sent on the bus.","Digital I/O","v1 compatibility wrappers","Digital I/O","v2 compatibility shims","Single digital push-pull output pin","Drives the pin high","Drives the pin low","Wrapper to allow fallible <code>v2::OutputPin</code> traits to be …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new OldOutputPin wrapper around a <code>v2::OutputPin</code>","","","","","","","","Error type","High pin state","Low pin state","Single digital push-pull output pin","Digital output pin state","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Drives the pin high","Drives the pin low","Drives the pin high or low depending on the provided value","","","","","","","","","","","","","","","","","","Read error","Write error","Read half of a serial interface","Write half of a serial interface","Ensures that none of the previously written words are …","Reads a single word from the serial interface","Writes a single word to the serial interface","","Data in “captured” on the first clock transition","Data in “captured” on the second clock transition","An enumeration of SPI errors","Full duplex (master mode)","Clock signal high when idle","Clock signal low when idle","Helper for CPOL = 0, CPHA = 0","Helper for CPOL = 0, CPHA = 1","Helper for CPOL = 1, CPHA = 0","Helper for CPOL = 1, CPHA = 1","SPI mode","Clock phase","Clock polarity","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clock phase","Clock polarity","Reads the word stored in the shift register","Sends a word to the slave","","","","","","","","","","Trait for cancelable countdowns.","A count down timer","Error returned when a countdown can’t be canceled.","Marker trait that indicates that a timer is periodic","The unit of time used by this timer","Tries to cancel this countdown.","Starts a new count down","Non-blockingly “waits” until the count down finishes"],"i":[2,0,0,0,0,0,2,2,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,0,10,11,0,22,25,26,28,27,14,17,0,0,12,0,0,0,0,0,12,0,0,0,12,12,12,14,17,12,12,12,22,12,12,12,25,26,27,28,29,0,29,29,0,0,34,35,32,0,0,0,30,0,30,30,30,30,32,30,30,30,0,34,30,30,30,0,35,0,0,41,41,41,0,0,40,0,41,0,0,36,38,41,41,40,0,41,36,38,36,38,36,38,40,41,36,38,40,41,36,38,40,41,41,8,8,36,38,40,41,36,38,40,41,41,36,38,40,40,40,41,41,8,36,38,40,41,8,8,8,8,9,41,0,8,36,38,8,36,38,41,38,36,38,40,41,36,38,40,41,36,38,40,41,0,47,47,47,47,0,0,0,0,0,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,51,52,52,0,0,52,52,52,52,52,52,52,52,52,51,51,51,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,53,0,0,53,54,53,53,57,57,59,0,56,56,0,0,0,0,0,0,0,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,58,58,59,59,56,57,58,56,57,58,56,57,58,0,0,60,0,62,60,62,62],"f":[0,0,0,0,0,0,[[[2,[],[[1,[-1]]]]],3,[]],[[[2,[],[[1,[-1]]]]],3,[]],0,[[[2,[],[[1,[-1]]]]],-1,[]],[[[2,[],[[1,[-1]]]]],-1,[]],0,0,[[[2,[],[[1,[-1]]]],-1],3,[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[6,[],[[4,[-1]],[5,[-2]]]]],[[7,[-1,-2]]],8,9],[[[6,[],[[4,[-1]],[5,[-2]]]],-1],[[7,[3,-2]]],8,9],0,0,[[10,-1],3,[]],[[11,-1],3,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[12,12],13],[[[14,[],[[5,[-1]]]],-2,[15,[12]]],[[7,[3,-1]]],[],16],[[[17,[],[[5,[-1]]]],-2,-3],[[7,[3,-1]]],[],16,[[19,[],[[18,[12]]]]]],[[12,20],21],[-1,-1,[]],[-1,-2,[],[]],[[[22,[],[[5,[-1]]]],-2,[15,[23]]],[[7,[3,-1]]],[],16],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[[[25,[],[[5,[-1]]]],-2,[15,[23]]],[[7,[3,-1]]],[],16],[[[26,[],[[5,[-1]]]],-2,-3],[[7,[3,-1]]],[],16,[[19,[],[[18,[23]]]]]],[[[27,[],[[5,[-1]]]],-2,-3,[15,[23]]],[[7,[3,-1]]],[],16,[[19,[],[[18,[23]]]]]],[[[28,[],[[5,[-1]]]],-2,[15,[23]],[15,[23]]],[[7,[3,-1]]],[],16],0,0,[[[29,[],[[5,[-1]]]]],[[7,[3,-1]]],[]],[[[29,[],[[5,[-1]]]],[15,[-2]]],[[7,[3,-1]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[-1]],[30,[-1]]],13,31],[[[32,[],[[5,[-1]]]],[15,[[30,[-2]]]]],[[7,[3,-1]]],[],[]],[[[30,[-1]],20],21,33],[-1,-1,[]],[-1,-2,[],[]],0,[[[34,[],[[5,[-1]]]],[15,[-2]]],[[7,[[15,[-2]],-1]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],0,[[[35,[],[[5,[-1]]]],[15,[-2]]],[[7,[3,-1]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36,37],[38,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[38,38],[40,40],[41,41],[[41,41],42],[8,[[15,[23]]]],[8,43],[[36,36],13],[[38,38],13],[[40,40],13],[[41,41],13],[[36,20],21],[[38,20],21],[[40,20],21],[[41,20],21],[[41,20],21],[-1,-1,[]],[-1,-1,[]],[38,40],[36,40],[-1,-1,[]],[-1,-1,[]],[[41,-1],3,44],[8,40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,13],[8,13],[8,13],[8,13],[9,41],[41,41],0,[[-1,[15,[23]]],[[45,[8]]],[[46,[40]]]],[37,[[45,[36]]]],[39,[[45,[38]]]],[[-1,43],[[45,[8]]],[[46,[40]]]],[37,36],[39,38],[[41,41],[[45,[42]]]],[38,36],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,[[[47,[],[[4,[-1]],[5,[-2]]]]],[[48,[-1,-2]]],8,9],[[[47,[],[[4,[-1]],[5,[-2]]]],-1],[[48,[[45,[-1]],-2]]],8,9],0,0,0,0,0,[49,3],[49,3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[50,[-2]]],33,[[51,[],[[5,[-1]]]]]],[-1,-1,[]],[-1,-2,[],[]],[-2,[[50,[-2]]],33,[[51,[],[[5,[-1]]]]]],[-1,[[7,[3]]],[]],[[[50,[-2]]],3,33,[[51,[],[[5,[-1]]]]]],[-1,[[7,[3]]],[]],[[[50,[-2]]],3,33,[[51,[],[[5,[-1]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[[52,52],13],[[52,20],21],[13,52],[-1,-1,[]],[-1,-2,[],[]],[52,-1,[]],[[[51,[],[[5,[-1]]]]],[[7,[3,-1]]],[]],[[[51,[],[[5,[-1]]]]],[[7,[3,-1]]],[]],[[[51,[],[[5,[-1]]]],52],[[7,[3,-1]]],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[53,[],[[5,[-1]]]]],[[48,[3,-1]]],[]],[[[54,[],[[5,[-1]]]]],[[48,[-2,-1]]],[],[]],[[[53,[],[[5,[-1]]]],-2],[[48,[3,-1]]],[],[]],[[53,55],21],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[57,57],[58,58],[[56,56],13],[[57,57],13],[[58,58],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[59,[],[[5,[-1]]]]],[[48,[-2,-1]]],[],[]],[[[59,[],[[5,[-1]]]],-2],[[48,[3,-1]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,[[[60,[],[[5,[-1]]]]],[[7,[3,-1]]],[]],[[[62,[],[[61,[-1]]]],-2],3,[],[[46,[-1]]]],[[[62,[],[[61,[-1]]]]],[[48,[3,63]]],[]]],"c":[188,192,193,194],"p":[[17,"Duty"],[10,"PwmPin",0],[1,"tuple"],[17,"Frame"],[17,"Error"],[10,"Can",23],[6,"Result",303],[10,"Frame",99],[10,"Error",99],[10,"DelayMs",28],[10,"DelayUs",28],[6,"Operation",32],[1,"bool"],[10,"Transactional",32],[1,"slice"],[10,"AddressMode",32],[10,"TransactionalIter",32],[17,"Item"],[10,"IntoIterator",304],[5,"Formatter",305],[8,"Result",305],[10,"Read",32],[1,"u8"],[5,"TypeId",306],[10,"Write",32],[10,"WriteIter",32],[10,"WriteIterRead",32],[10,"WriteRead",32],[10,"Write",68],[6,"Operation",74],[10,"PartialEq",307],[10,"Transactional",74],[10,"Debug",305],[10,"Transfer",74],[10,"Write",74],[5,"StandardId",99],[1,"u16"],[5,"ExtendedId",99],[1,"u32"],[6,"Id",99],[6,"ErrorKind",99],[6,"Ordering",307],[1,"usize"],[10,"Hasher",308],[6,"Option",309],[10,"Into",310],[10,"Can",183],[8,"Result",311],[10,"OutputPin",192],[5,"OldOutputPin",195],[10,"OutputPin",209],[6,"PinState",209],[10,"Write",243],[10,"Read",243],[1,"str"],[6,"Polarity",251],[6,"Phase",251],[5,"Mode",251],[10,"FullDuplex",251],[10,"Cancel",295],[17,"Time"],[10,"CountDown",295],[6,"Void",312]],"b":[[142,"impl-Display-for-ErrorKind"],[143,"impl-Debug-for-ErrorKind"],[146,"impl-From%3CExtendedId%3E-for-Id"],[147,"impl-From%3CStandardId%3E-for-Id"]]}],\
["panic_halt",{"doc":"Set the panicking behavior to halt","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]}],\
["r0",{"doc":"Memory initialization code (“crt0”) written in Rust.","t":"KHH","n":["Word","init_data","zero_bss"],"q":[[0,"r0"]],"d":["Trait for machine word types.","Initializes the <code>.data</code> section by copying it from the …","Zeroes the <code>.bss</code> section."],"i":[0,0,0],"f":[0,[[],1],[[],1]],"c":[],"p":[[1,"tuple"]],"b":[]}],\
["riscv",{"doc":"Low level access to RISC-V processors","t":"CCCCQHHHHHHFNNNNNNNNNNNNNNNNNNHHHPPPPGFFPPPPGPPPPONNNNNNNNONNNCCCNNNNNNNCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCNNNNNOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCOCCCCCCCCCCCCCCCCCCOCCCCCCCCCCCCNNNNNNNNNNNNCCCCCCCCHHHPFGFPPPPPPPPPGPNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFNNNNNNNHNNNPGPPPPPGPPPPPPPPFPPPPPPPGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNFNNHHHHNNNNNNNHHHHHNNNNHHHFNNNNHHHHHHHHHHHHHHNNNNNNNNNNNNHHHHHHHHHHHHHHHNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFNNNHHHHHHNNNNHHHHHHHNNNNNNNNNFNNNHHHHHHHHHNNNNNNNHHHHHHHHHHNNNNNNNNNFNNNNNNNHNNNHHHFNNNHHHHHHNNNNNNNHHHHHHHNNNNNNNNNGFPPPNNNNNNNNNNNNNNNNHNNNNNNHHPPPGPGPFPPPGPPPPPGNNNNNNNNNNHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNHPFGPNNNNNNNNNNNNNNNHNNNNNNNHFNNNNNNNNHNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPGFPPPPNNNNNNNNNNNNNNNNNHHNNNNNNHPGPPPPPGPPPFPPPPPPGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNHFNNHHHHNNNNNNNHHHHHNNNNHHFNNNHHHHHHNNNNHHHHHHHNNNNNNNNNFNNNNNNNHNNNNNNNNNHHEGFPPNNNNHHHHNNNNNNNNNNNHNHHHHHHHHNNNNNNNNNNNNNHHFENNNNNNNNHNNNNHHHHFNNNNNNNHNNNHHHFNNNHHHNNNNHHHHNNNNNNFNNNNNNNHNNNNNNHHFNNHNNNNHHHNNNNNHHEFNNNNNNNNHNNNNH","n":["asm","delay","interrupt","register","singleton","delay","ebreak","nop","sfence_vma","sfence_vma_all","wfi","McycleDelay","borrow","borrow_mut","clone","delay_ms","delay_ms","delay_ms","delay_ms","delay_us","delay_us","delay_us","delay_us","delay_us","from","into","new","try_from","try_into","type_id","disable","enable","free","NA4","NAPOT","NONE","OFF","Permission","Pmp","Pmpcsr","R","RW","RWX","RX","Range","TOR","W","WX","X","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte","clone","clone","clone","cycle","cycleh","fcsr","fmt","fmt","fmt","from","from","from","from","hpmcounter10","hpmcounter10h","hpmcounter11","hpmcounter11h","hpmcounter12","hpmcounter12h","hpmcounter13","hpmcounter13h","hpmcounter14","hpmcounter14h","hpmcounter15","hpmcounter15h","hpmcounter16","hpmcounter16h","hpmcounter17","hpmcounter17h","hpmcounter18","hpmcounter18h","hpmcounter19","hpmcounter19h","hpmcounter20","hpmcounter20h","hpmcounter21","hpmcounter21h","hpmcounter22","hpmcounter22h","hpmcounter23","hpmcounter23h","hpmcounter24","hpmcounter24h","hpmcounter25","hpmcounter25h","hpmcounter26","hpmcounter26h","hpmcounter27","hpmcounter27h","hpmcounter28","hpmcounter28h","hpmcounter29","hpmcounter29h","hpmcounter3","hpmcounter30","hpmcounter30h","hpmcounter31","hpmcounter31h","hpmcounter3h","hpmcounter4","hpmcounter4h","hpmcounter5","hpmcounter5h","hpmcounter6","hpmcounter6h","hpmcounter7","hpmcounter7h","hpmcounter8","hpmcounter8h","hpmcounter9","hpmcounter9h","instret","instreth","into","into","into","into","into_config","locked","marchid","mcause","mcounteren","mcycle","mcycleh","medeleg","mepc","mhartid","mhpmcounter10","mhpmcounter10h","mhpmcounter11","mhpmcounter11h","mhpmcounter12","mhpmcounter12h","mhpmcounter13","mhpmcounter13h","mhpmcounter14","mhpmcounter14h","mhpmcounter15","mhpmcounter15h","mhpmcounter16","mhpmcounter16h","mhpmcounter17","mhpmcounter17h","mhpmcounter18","mhpmcounter18h","mhpmcounter19","mhpmcounter19h","mhpmcounter20","mhpmcounter20h","mhpmcounter21","mhpmcounter21h","mhpmcounter22","mhpmcounter22h","mhpmcounter23","mhpmcounter23h","mhpmcounter24","mhpmcounter24h","mhpmcounter25","mhpmcounter25h","mhpmcounter26","mhpmcounter26h","mhpmcounter27","mhpmcounter27h","mhpmcounter28","mhpmcounter28h","mhpmcounter29","mhpmcounter29h","mhpmcounter3","mhpmcounter30","mhpmcounter30h","mhpmcounter31","mhpmcounter31h","mhpmcounter3h","mhpmcounter4","mhpmcounter4h","mhpmcounter5","mhpmcounter5h","mhpmcounter6","mhpmcounter6h","mhpmcounter7","mhpmcounter7h","mhpmcounter8","mhpmcounter8h","mhpmcounter9","mhpmcounter9h","mhpmevent10","mhpmevent11","mhpmevent12","mhpmevent13","mhpmevent14","mhpmevent15","mhpmevent16","mhpmevent17","mhpmevent18","mhpmevent19","mhpmevent20","mhpmevent21","mhpmevent22","mhpmevent23","mhpmevent24","mhpmevent25","mhpmevent26","mhpmevent27","mhpmevent28","mhpmevent29","mhpmevent3","mhpmevent30","mhpmevent31","mhpmevent4","mhpmevent5","mhpmevent6","mhpmevent7","mhpmevent8","mhpmevent9","mideleg","mie","mimpid","minstret","minstreth","mip","misa","mscratch","mstatus","mtval","mtvec","mvendorid","permission","pmpaddr0","pmpaddr1","pmpaddr10","pmpaddr11","pmpaddr12","pmpaddr13","pmpaddr14","pmpaddr15","pmpaddr2","pmpaddr3","pmpaddr4","pmpaddr5","pmpaddr6","pmpaddr7","pmpaddr8","pmpaddr9","pmpcfg0","pmpcfg2","range","satp","scause","scounteren","sepc","sie","sip","sscratch","sstatus","stval","stvec","time","timeh","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ucause","uepc","uie","uip","uscratch","ustatus","utval","utvec","read","read64","read","DZ","FCSR","Flag","Flags","Invalid","NV","NX","OF","RoundDown","RoundToNearestEven","RoundToNearestMaxMagnitude","RoundTowardsZero","RoundUp","RoundingMode","UF","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_flag","clear_flags","clone","clone","clone","clone","dz","eq","fflags","fmt","fmt","fmt","fmt","frm","from","from","from","from","into","into","into","into","nv","nx","of","read","set_rounding_mode","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uf","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read64","read","read","read64","read","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","Marchid","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","Breakpoint","Exception","Exception","IllegalInstruction","InstructionFault","InstructionMisaligned","InstructionPageFault","Interrupt","Interrupt","LoadFault","LoadMisaligned","LoadPageFault","MachineEnvCall","MachineExternal","MachineSoft","MachineTimer","Mcause","StoreFault","StoreMisaligned","StorePageFault","SupervisorEnvCall","SupervisorExternal","SupervisorSoft","SupervisorTimer","Trap","Unknown","Unknown","UserEnvCall","UserExternal","UserSoft","UserTimer","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","code","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","is_exception","is_interrupt","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Mcounteren","borrow","borrow_mut","clear_cy","clear_hpm","clear_ir","clear_tm","clone","cy","fmt","from","hpm","into","ir","read","set_cy","set_hpm","set_ir","set_tm","tm","try_from","try_into","type_id","read","read64","read","Medeleg","bits","borrow","borrow_mut","breakpoint","clear_breakpoint","clear_illegal_instruction","clear_instruction_fault","clear_instruction_misaligned","clear_instruction_page_fault","clear_load_fault","clear_load_misaligned","clear_load_page_fault","clear_machine_env_call","clear_store_fault","clear_store_misaligned","clear_store_page_fault","clear_supervisor_env_call","clear_user_env_call","clone","fmt","from","illegal_instruction","instruction_fault","instruction_misaligned","instruction_page_fault","into","load_fault","load_misaligned","load_page_fault","machine_env_call","read","set_breakpoint","set_illegal_instruction","set_instruction_fault","set_instruction_misaligned","set_instruction_page_fault","set_load_fault","set_load_misaligned","set_load_page_fault","set_machine_env_call","set_store_fault","set_store_misaligned","set_store_page_fault","set_supervisor_env_call","set_user_env_call","store_fault","store_misaligned","store_page_fault","supervisor_env_call","try_from","try_into","type_id","user_env_call","read","write","read","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","read64","write","read","write","read","read64","write","read","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","Mideleg","bits","borrow","borrow_mut","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Mie","bits","borrow","borrow_mut","clear_mext","clear_msoft","clear_mtimer","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","mext","msoft","mtimer","read","set_mext","set_msoft","set_mtimer","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Mimpid","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","read","read64","read","Mip","bits","borrow","borrow_mut","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","mext","msoft","mtimer","read","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","MXL","Misa","XLEN128","XLEN32","XLEN64","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","has_extension","into","into","mxl","read","try_from","try_from","try_into","try_into","type_id","type_id","read","write","AllOff","Clean","Dirty","FS","Initial","MPP","Machine","Mstatus","NoneDirtyOrClean","NoneDirtySomeClean","Off","SPP","SomeDirty","Supervisor","Supervisor","User","User","XS","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_mie","clear_mprv","clear_mxr","clear_sie","clear_sum","clear_tsr","clear_tvm","clear_tw","clear_uie","clone","clone","clone","clone","clone","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","fs","into","into","into","into","into","mie","mpie","mpp","mprv","mxr","read","sd","set_fs","set_mie","set_mpie","set_mpp","set_mprv","set_mxr","set_sie","set_spie","set_spp","set_sum","set_tsr","set_tvm","set_tw","set_uie","set_upie","sie","spie","spp","sum","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tsr","tvm","tw","type_id","type_id","type_id","type_id","type_id","uie","upie","xs","read","Direct","Mtvec","TrapMode","Vectored","address","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","into","into","read","trap_mode","try_from","try_from","try_into","try_into","type_id","type_id","write","Mvendorid","bits","borrow","borrow_mut","clone","fmt","from","into","jedec_manufacturer","read","try_from","try_into","type_id","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","clear_pmp","read","set_pmp","write","clear_pmp","read","set_pmp","write","Bare","Mode","Satp","Sv39","Sv48","Sv57","Sv64","asid","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","into","into","mode","ppn","read","set","try_from","try_from","try_into","try_into","type_id","type_id","write","Breakpoint","Exception","Exception","IllegalInstruction","InstructionFault","InstructionMisaligned","InstructionPageFault","Interrupt","Interrupt","LoadFault","LoadPageFault","Scause","StoreFault","StoreMisaligned","StorePageFault","SupervisorExternal","SupervisorSoft","SupervisorTimer","Trap","Unknown","Unknown","UserEnvCall","UserExternal","UserSoft","UserTimer","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","code","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","is_exception","is_interrupt","read","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","Scounteren","borrow","borrow_mut","clear_cy","clear_hpm","clear_ir","clear_tm","clone","cy","fmt","from","hpm","into","ir","read","set_cy","set_hpm","set_ir","set_tm","tm","try_from","try_into","type_id","read","write","Sie","bits","borrow","borrow_mut","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Sip","bits","borrow","borrow_mut","clone","fmt","from","into","read","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","read","write","FS","SPP","Sstatus","Supervisor","User","borrow","borrow","borrow_mut","borrow_mut","clear_mxr","clear_sie","clear_sum","clear_uie","clone","clone","eq","fmt","fmt","from","from","fs","into","into","mxr","read","sd","set_fs","set_mxr","set_sie","set_spie","set_spp","set_sum","set_uie","set_upie","sie","spie","spp","sum","try_from","try_from","try_into","try_into","type_id","type_id","uie","upie","xs","read","write","Stvec","TrapMode","address","bits","borrow","borrow_mut","clone","fmt","from","into","read","trap_mode","try_from","try_into","type_id","write","read","read64","read","Ucause","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","write","read","write","Uie","bits","borrow","borrow_mut","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_uext","set_usoft","set_utimer","try_from","try_into","type_id","uext","usoft","utimer","Uip","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","uext","usoft","utimer","read","write","Ustatus","borrow","borrow_mut","clear_uie","clone","fmt","from","into","read","set_uie","set_upie","try_from","try_into","type_id","uie","upie","read","write","TrapMode","Utvec","address","bits","borrow","borrow_mut","clone","fmt","from","into","read","trap_mode","try_from","try_into","type_id","write"],"q":[[0,"riscv"],[5,"riscv::asm"],[11,"riscv::delay"],[30,"riscv::interrupt"],[33,"riscv::register"],[297,"riscv::register::cycle"],[299,"riscv::register::cycleh"],[300,"riscv::register::fcsr"],[364,"riscv::register::hpmcounter10"],[366,"riscv::register::hpmcounter10h"],[367,"riscv::register::hpmcounter11"],[369,"riscv::register::hpmcounter11h"],[370,"riscv::register::hpmcounter12"],[372,"riscv::register::hpmcounter12h"],[373,"riscv::register::hpmcounter13"],[375,"riscv::register::hpmcounter13h"],[376,"riscv::register::hpmcounter14"],[378,"riscv::register::hpmcounter14h"],[379,"riscv::register::hpmcounter15"],[381,"riscv::register::hpmcounter15h"],[382,"riscv::register::hpmcounter16"],[384,"riscv::register::hpmcounter16h"],[385,"riscv::register::hpmcounter17"],[387,"riscv::register::hpmcounter17h"],[388,"riscv::register::hpmcounter18"],[390,"riscv::register::hpmcounter18h"],[391,"riscv::register::hpmcounter19"],[393,"riscv::register::hpmcounter19h"],[394,"riscv::register::hpmcounter20"],[396,"riscv::register::hpmcounter20h"],[397,"riscv::register::hpmcounter21"],[399,"riscv::register::hpmcounter21h"],[400,"riscv::register::hpmcounter22"],[402,"riscv::register::hpmcounter22h"],[403,"riscv::register::hpmcounter23"],[405,"riscv::register::hpmcounter23h"],[406,"riscv::register::hpmcounter24"],[408,"riscv::register::hpmcounter24h"],[409,"riscv::register::hpmcounter25"],[411,"riscv::register::hpmcounter25h"],[412,"riscv::register::hpmcounter26"],[414,"riscv::register::hpmcounter26h"],[415,"riscv::register::hpmcounter27"],[417,"riscv::register::hpmcounter27h"],[418,"riscv::register::hpmcounter28"],[420,"riscv::register::hpmcounter28h"],[421,"riscv::register::hpmcounter29"],[423,"riscv::register::hpmcounter29h"],[424,"riscv::register::hpmcounter3"],[426,"riscv::register::hpmcounter30"],[428,"riscv::register::hpmcounter30h"],[429,"riscv::register::hpmcounter31"],[431,"riscv::register::hpmcounter31h"],[432,"riscv::register::hpmcounter3h"],[433,"riscv::register::hpmcounter4"],[435,"riscv::register::hpmcounter4h"],[436,"riscv::register::hpmcounter5"],[438,"riscv::register::hpmcounter5h"],[439,"riscv::register::hpmcounter6"],[441,"riscv::register::hpmcounter6h"],[442,"riscv::register::hpmcounter7"],[444,"riscv::register::hpmcounter7h"],[445,"riscv::register::hpmcounter8"],[447,"riscv::register::hpmcounter8h"],[448,"riscv::register::hpmcounter9"],[450,"riscv::register::hpmcounter9h"],[451,"riscv::register::instret"],[453,"riscv::register::instreth"],[454,"riscv::register::marchid"],[466,"riscv::register::mcause"],[544,"riscv::register::mcounteren"],[567,"riscv::register::mcycle"],[569,"riscv::register::mcycleh"],[570,"riscv::register::medeleg"],[624,"riscv::register::mepc"],[626,"riscv::register::mhartid"],[627,"riscv::register::mhpmcounter10"],[630,"riscv::register::mhpmcounter10h"],[632,"riscv::register::mhpmcounter11"],[635,"riscv::register::mhpmcounter11h"],[637,"riscv::register::mhpmcounter12"],[640,"riscv::register::mhpmcounter12h"],[642,"riscv::register::mhpmcounter13"],[645,"riscv::register::mhpmcounter13h"],[647,"riscv::register::mhpmcounter14"],[650,"riscv::register::mhpmcounter14h"],[652,"riscv::register::mhpmcounter15"],[655,"riscv::register::mhpmcounter15h"],[657,"riscv::register::mhpmcounter16"],[660,"riscv::register::mhpmcounter16h"],[662,"riscv::register::mhpmcounter17"],[665,"riscv::register::mhpmcounter17h"],[667,"riscv::register::mhpmcounter18"],[670,"riscv::register::mhpmcounter18h"],[672,"riscv::register::mhpmcounter19"],[675,"riscv::register::mhpmcounter19h"],[677,"riscv::register::mhpmcounter20"],[680,"riscv::register::mhpmcounter20h"],[682,"riscv::register::mhpmcounter21"],[685,"riscv::register::mhpmcounter21h"],[687,"riscv::register::mhpmcounter22"],[690,"riscv::register::mhpmcounter22h"],[692,"riscv::register::mhpmcounter23"],[695,"riscv::register::mhpmcounter23h"],[697,"riscv::register::mhpmcounter24"],[700,"riscv::register::mhpmcounter24h"],[702,"riscv::register::mhpmcounter25"],[705,"riscv::register::mhpmcounter25h"],[707,"riscv::register::mhpmcounter26"],[710,"riscv::register::mhpmcounter26h"],[712,"riscv::register::mhpmcounter27"],[715,"riscv::register::mhpmcounter27h"],[717,"riscv::register::mhpmcounter28"],[720,"riscv::register::mhpmcounter28h"],[722,"riscv::register::mhpmcounter29"],[725,"riscv::register::mhpmcounter29h"],[727,"riscv::register::mhpmcounter3"],[730,"riscv::register::mhpmcounter30"],[733,"riscv::register::mhpmcounter30h"],[735,"riscv::register::mhpmcounter31"],[738,"riscv::register::mhpmcounter31h"],[740,"riscv::register::mhpmcounter3h"],[742,"riscv::register::mhpmcounter4"],[745,"riscv::register::mhpmcounter4h"],[747,"riscv::register::mhpmcounter5"],[750,"riscv::register::mhpmcounter5h"],[752,"riscv::register::mhpmcounter6"],[755,"riscv::register::mhpmcounter6h"],[757,"riscv::register::mhpmcounter7"],[760,"riscv::register::mhpmcounter7h"],[762,"riscv::register::mhpmcounter8"],[765,"riscv::register::mhpmcounter8h"],[767,"riscv::register::mhpmcounter9"],[770,"riscv::register::mhpmcounter9h"],[772,"riscv::register::mhpmevent10"],[774,"riscv::register::mhpmevent11"],[776,"riscv::register::mhpmevent12"],[778,"riscv::register::mhpmevent13"],[780,"riscv::register::mhpmevent14"],[782,"riscv::register::mhpmevent15"],[784,"riscv::register::mhpmevent16"],[786,"riscv::register::mhpmevent17"],[788,"riscv::register::mhpmevent18"],[790,"riscv::register::mhpmevent19"],[792,"riscv::register::mhpmevent20"],[794,"riscv::register::mhpmevent21"],[796,"riscv::register::mhpmevent22"],[798,"riscv::register::mhpmevent23"],[800,"riscv::register::mhpmevent24"],[802,"riscv::register::mhpmevent25"],[804,"riscv::register::mhpmevent26"],[806,"riscv::register::mhpmevent27"],[808,"riscv::register::mhpmevent28"],[810,"riscv::register::mhpmevent29"],[812,"riscv::register::mhpmevent3"],[814,"riscv::register::mhpmevent30"],[816,"riscv::register::mhpmevent31"],[818,"riscv::register::mhpmevent4"],[820,"riscv::register::mhpmevent5"],[822,"riscv::register::mhpmevent6"],[824,"riscv::register::mhpmevent7"],[826,"riscv::register::mhpmevent8"],[828,"riscv::register::mhpmevent9"],[830,"riscv::register::mideleg"],[860,"riscv::register::mie"],[899,"riscv::register::mimpid"],[911,"riscv::register::minstret"],[913,"riscv::register::minstreth"],[914,"riscv::register::mip"],[947,"riscv::register::misa"],[975,"riscv::register::mscratch"],[977,"riscv::register::mstatus"],[1086,"riscv::register::mtval"],[1087,"riscv::register::mtvec"],[1115,"riscv::register::mvendorid"],[1128,"riscv::register::pmpaddr0"],[1130,"riscv::register::pmpaddr1"],[1132,"riscv::register::pmpaddr10"],[1134,"riscv::register::pmpaddr11"],[1136,"riscv::register::pmpaddr12"],[1138,"riscv::register::pmpaddr13"],[1140,"riscv::register::pmpaddr14"],[1142,"riscv::register::pmpaddr15"],[1144,"riscv::register::pmpaddr2"],[1146,"riscv::register::pmpaddr3"],[1148,"riscv::register::pmpaddr4"],[1150,"riscv::register::pmpaddr5"],[1152,"riscv::register::pmpaddr6"],[1154,"riscv::register::pmpaddr7"],[1156,"riscv::register::pmpaddr8"],[1158,"riscv::register::pmpaddr9"],[1160,"riscv::register::pmpcfg0"],[1164,"riscv::register::pmpcfg2"],[1168,"riscv::register::satp"],[1201,"riscv::register::scause"],[1274,"riscv::register::scounteren"],[1297,"riscv::register::sepc"],[1299,"riscv::register::sie"],[1329,"riscv::register::sip"],[1347,"riscv::register::sscratch"],[1349,"riscv::register::sstatus"],[1396,"riscv::register::stval"],[1398,"riscv::register::stvec"],[1414,"riscv::register::time"],[1416,"riscv::register::timeh"],[1417,"riscv::register::ucause"],[1430,"riscv::register::uepc"],[1432,"riscv::register::uie"],[1453,"riscv::register::uip"],[1468,"riscv::register::uscratch"],[1470,"riscv::register::ustatus"],[1486,"riscv::register::utval"],[1488,"riscv::register::utvec"],[1504,"core::result"],[1505,"core::any"],[1506,"core::ops::function"],[1507,"core::fmt"],[1508,"core::fmt"]],"d":["Assembly instructions","Delay devices and providers","Interrupts","RISC-V CSR’s","Macro to create a mutable reference to a statically …","Blocks the program for <em>at least</em> <code>cycles</code> CPU cycles.","<code>EBREAK</code> instruction wrapper","<code>nop</code> instruction wrapper","<code>SFENCE.VMA</code> instruction wrapper","<code>SFENCE.VMA</code> instruction wrapper (all address spaces and …","<code>WFI</code> instruction wrapper","Machine mode cycle counter (<code>mcycle</code>) as a delay provider","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Constructs the delay provider. <code>ticks_second</code> should be the …","","","","Disables all interrupts in the current hart.","Enables all the interrupts in the current hart.","Execute closure <code>f</code> with interrupts disabled in the current …","","","","","Permission enum contains all possible permission modes for …","Pmp struct holds a high-level representation of a single …","","","","","","Range enum contains all possible addressing modes for pmp …","","","","","Holds the raw contents of a PMP CSR Register","","","","","","","","","raw bits","","","","cycle register","cycleh register","Floating-point control and status register","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","instret register","instreth register","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take the register contents and translate into a Pmp …","Is PMP locked?","marchid register","mcause register","mcounteren register","mcycle register","mcycleh register","medeleg register","mepc register","mhartid register","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","mideleg register","mie register","mimpid register","minstret register","minstreth register","mip register","misa register","mscratch register","mstatus register","mtval register","mtvec register","mvendorid register","Current PMP Permission","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection configuration pmpcfg0 struct …","Physical memory protection configuration pmpcfg2 struct …","Current PMP Range","satp register","scause register","scounteren register","sepc register","sie register","sip register","sscratch register","sstatus register","stval register","stvec register","time register","timeh register","","","","","","","","","","","","","ucause register","uepc register","uie register","uip register","uscratch register","ustatus register","utval register","stvec register","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Divide by Zero","Floating-point control and status register","Accrued Exception Flag","Accrued Exception Flags","","Invalid Operation","Inexact","Overflow","","","","","","Rounding Mode","Underflow","Returns the contents of the register as raw bits","","","","","","","","","Resets <code>fflags</code> field bit","Resets <code>fflags</code> field bits","","","","","Divide by Zero","","Accrued Exception Flags","","","","","Rounding Mode","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invalid Operation","Inexact","Overflow","Reads the CSR","Writes the CSR","","","","","","","","","","","","","Underflow","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","marchid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","","Exception","","","","","","Interrupt","","","","","","","","","mcause register","","","","","","","","Trap Cause","","","","","","","Returns the contents of the register as raw bits","","","","","","","","","Trap Cause","","","","","Returns the code field","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is trap cause an exception.","Is trap cause an interrupt.","Reads the CSR","","","","","","","","","","","","","mcounteren register","","","Supervisor cycle Enable","","Supervisor instret Enable","Supervisor time Enable","","Supervisor “cycle[h]” Enable","","Returns the argument unchanged.","Supervisor “hpm[x]” Enable (bits 3-31)","Calls <code>U::from(self)</code>.","Supervisor “instret[h]” Enable","Reads the CSR","Supervisor cycle Enable","","Supervisor instret Enable","Supervisor time Enable","Supervisor “time[h]” Enable","","","","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","medeleg register","Returns the contents of the register as raw bits","","","Breakpoint Delegate","Breakpoint Delegate","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Store/AMO Access fault","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","Environment Call from U-mode Delegate","","","Returns the argument unchanged.","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Calls <code>U::from(self)</code>.","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Reads the CSR","Breakpoint Delegate","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Store/AMO Access fault","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","Environment Call from U-mode Delegate","Store/AMO Access Fault Delegate","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","","","","Environment Call from U-mode Delegate","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","mideleg register","Returns the contents of the register as raw bits","","","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","","","","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","mie register","Returns the contents of the register as raw bits","","","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Reads the CSR","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","mimpid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","mip register","Returns the contents of the register as raw bits","","","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Machine External Interrupt Pending","Machine Software Interrupt Pending","Machine Timer Interrupt Pending","Reads the CSR","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Machine XLEN","misa register","","","","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns true when the atomic extension is implemented.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the machine xlen.","Reads the CSR","","","","","","","Reads the CSR","Writes the CSR","All off","","","Floating-point extension state","","Machine Previous Privilege Mode","","mstatus register","None dirty or clean, some on","None dirty, some clean","","Supervisor Previous Privilege Mode","Some dirty","","","","","Additional extension state","","","","","","","","","","","Machine Interrupt Enable","Modify Memory PRiVilege","Make eXecutable Readable","Supervisor Interrupt Enable","Permit Supervisor User Memory access","Trap SRET","Trap Virtual Memory","Timeout Wait","User Interrupt Enable","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Floating-point extension state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Machine Interrupt Enable","Machine Previous Interrupt Enable","Machine Previous Privilege Mode","Modify Memory PRiVilege","Make eXecutable Readable","Reads the CSR","Whether either the FS field or XS field signals the …","Floating-point extension state","Machine Interrupt Enable","Machine Previous Interrupt Enable","Machine Previous Privilege Mode","Modify Memory PRiVilege","Make eXecutable Readable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","Trap SRET","Trap Virtual Memory","Timeout Wait","User Interrupt Enable","User Previous Interrupt Enable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","","","","","","","","","","","Trap SRET","Trap Virtual Memory","Timeout Wait","","","","","","User Interrupt Enable","User Previous Interrupt Enable","Additional extension state","Reads the CSR","","mtvec register","Trap mode","","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","","","","Writes the CSR","mvendorid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the JEDEC manufacturer ID","Reads the CSR","","","","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Clear the pmp configuration corresponding to the index","Reads the CSR","Set the pmp configuration corresponding to the index","Writes the CSR","Clear the pmp configuration corresponding to the index","Reads the CSR","Set the pmp configuration corresponding to the index","Writes the CSR","No translation or protection","64-bit satp mode","satp register","Page-based 39-bit virtual addressing","Page-based 48-bit virtual addressing","Page-based 57-bit virtual addressing","Page-based 64-bit virtual addressing","Address space identifier","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Current address-translation scheme","Physical page number","Reads the CSR","Sets the register to corresponding page table mode, …","","","","","","","Writes the CSR","","Exception","","","","","","Interrupt","","","","scause register","","","","","","","Trap Cause","","","","","","","Returns the contents of the register as raw bits","","","","","","","","","Trap Cause","","","","","Returns the code field","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is trap cause an exception.","Is trap cause an interrupt.","Reads the CSR","Set supervisor cause register to corresponding cause.","","","","","","","","","","","","","Writes the CSR","scounteren register","","","User cycle Enable","","User instret Enable","User time Enable","","User “cycle[h]” Enable","","Returns the argument unchanged.","User “hpm[x]” Enable (bits 3-31)","Calls <code>U::from(self)</code>.","User “instret[h]&quot; Enable","Reads the CSR","User cycle Enable","","User instret Enable","User time Enable","User “time[h]” Enable","","","","Reads the CSR","Writes the CSR","sie register","Returns the contents of the register as raw bits","","","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","sip register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Reads the CSR","Writes the CSR","","Supervisor Previous Privilege Mode","Supervisor Status Register","","","","","","","Make eXecutable Readable","Supervisor Interrupt Enable","Permit Supervisor User Memory access","User Interrupt Enable","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The status of the floating-point unit","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make eXecutable Readable","Reads the CSR","Whether either the FS field or XS field signals the …","The status of the floating-point unit","Make eXecutable Readable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","User Interrupt Enable","User Previous Interrupt Enable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","","","","","","","User Interrupt Enable","User Previous Interrupt Enable","The status of additional user-mode extensions and …","Reads the CSR","Writes the CSR","stvec register","","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","ucause register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","Writes the CSR","Reads the CSR","Writes the CSR","uie register","Returns the contents of the register as raw bits","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","uip register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Reads the CSR","Writes the CSR","ustatus register","","","User Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","User Interrupt Enable","User Previous Interrupt Enable","","","","User Interrupt Enable","User Previous Interrupt Enable","Reads the CSR","Writes the CSR","","stvec register","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","Writes the CSR"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,14,14,13,14,0,0,0,13,13,13,13,0,14,13,13,13,18,18,13,14,15,18,13,14,15,15,13,14,15,0,0,0,13,14,15,18,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,13,14,15,18,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,18,13,14,15,18,13,14,15,18,13,14,15,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,22,20,20,20,22,22,22,22,22,0,20,19,19,21,20,22,19,21,20,22,0,0,19,21,20,22,21,22,19,19,21,20,22,19,19,21,20,22,19,21,20,22,21,21,21,0,0,19,21,20,22,19,21,20,22,19,21,20,22,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,0,24,24,24,29,0,27,29,29,29,29,0,27,29,29,29,29,28,28,28,0,29,29,29,29,28,28,28,0,28,29,29,28,28,28,26,26,27,28,29,26,27,28,29,26,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,28,29,29,26,27,28,29,26,26,0,26,27,28,29,26,27,28,29,26,27,28,29,0,30,30,0,0,0,0,30,30,30,30,30,30,30,0,0,0,0,0,30,30,30,30,0,0,0,0,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,0,0,0,0,0,0,32,32,32,32,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,0,33,33,33,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,0,34,34,34,0,0,0,0,35,35,35,0,0,0,0,0,0,35,35,35,35,35,35,35,0,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,0,0,37,37,37,36,36,37,36,37,36,37,37,36,37,36,37,36,36,37,36,0,36,37,36,37,36,37,0,0,40,41,41,0,41,0,42,0,40,40,41,0,40,42,43,42,43,0,39,40,41,42,43,39,40,41,42,43,0,0,0,0,0,0,0,0,0,39,40,41,42,43,40,41,42,43,39,40,41,42,43,39,40,41,42,43,39,39,40,41,42,43,39,39,39,39,39,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,40,41,42,43,39,40,41,42,43,39,39,39,39,40,41,42,43,39,39,39,0,45,0,0,45,44,44,44,45,44,45,44,45,45,44,45,44,45,44,45,0,44,44,45,44,45,44,45,0,0,46,46,46,46,46,46,46,46,0,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,48,48,48,48,47,47,47,48,47,48,47,48,48,47,48,47,48,47,48,47,47,0,0,47,48,47,48,47,48,0,52,0,50,52,52,52,52,0,50,52,52,0,52,52,52,51,51,51,0,51,52,52,51,51,51,49,49,50,51,52,49,50,51,52,49,49,50,51,52,49,50,51,52,50,51,52,49,50,51,51,52,52,49,50,51,52,49,49,0,0,49,50,51,52,49,50,51,52,49,50,51,52,0,0,53,53,0,0,0,0,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,0,0,0,54,54,54,0,0,0,0,0,0,54,54,54,54,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,0,0,0,0,0,57,57,56,57,56,57,0,0,0,0,56,57,57,56,57,56,57,56,56,57,56,0,56,0,0,0,0,0,0,0,0,56,56,56,56,56,57,56,57,56,57,56,56,56,0,0,0,0,58,58,58,58,58,58,58,58,0,58,58,58,58,0,0,0,0,0,59,59,59,59,59,59,59,0,59,59,59,0,0,0,0,60,60,60,0,0,0,60,60,60,60,0,0,0,0,60,60,60,60,60,60,0,61,61,61,61,61,61,61,0,61,61,61,61,61,61,0,0,0,62,62,0,62,62,62,62,0,0,0,62,62,62,62,62,0,0,0,0,63,63,63,63,63,63,63,63,0,63,63,63,63,0],"f":[0,0,0,0,0,[1,2],[[],2],[[],2],[[3,3],2],[[],2],[[],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[[4,5],2],[[4,6],2],[[4,7],2],[[4,1],2],[[4,6],2],[[4,1],2],[[4,7],2],[[4,8],2],[[4,5],2],[-1,-1,[]],[-1,-2,[],[]],[1,4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[],2],[[],2],[-2,-1,[],[[12,[],[[11,[-1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[13,13],[14,14],[15,15],0,0,0,[[13,16],17],[[14,16],17],[[15,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,3],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,[[],3],[[],8],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,2],[[],2],[19,19],[21,21],[20,20],[22,22],[21,23],[[22,22],23],[19,21],[[19,16],17],[[21,16],17],[[20,16],17],[[22,16],17],[19,22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,23],[21,23],[21,23],[[],19],[22,2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[21,23],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],[[],3],[[],8],[[],3],0,[24,3],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[[24,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],[[25,[24]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,27],[26,26],[27,27],[28,28],[29,29],[26,3],[[27,27],23],[[28,28],23],[[29,29],23],[[26,16],17],[[27,16],17],[[28,16],17],[[29,16],17],[-1,-1,[]],[-1,-1,[]],[3,28],[-1,-1,[]],[-1,-1,[]],[3,29],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,23],[26,23],[[],26],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[3,2],[[],2],[[],2],[30,30],[30,23],[[30,16],17],[-1,-1,[]],[[30,3],23],[-1,-2,[],[]],[30,23],[[],30],[[],2],[3,2],[[],2],[[],2],[30,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[],3],[[],8],[[],3],0,[31,3],[-1,-2,[],[]],[-1,-2,[],[]],[31,23],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[31,31],[[31,16],17],[-1,-1,[]],[31,23],[31,23],[31,23],[31,23],[-1,-2,[],[]],[31,23],[31,23],[31,23],[31,23],[[],31],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[31,23],[31,23],[31,23],[31,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[31,23],[[],3],[3,2],[[],3],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[[],8],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],0,[32,3],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[32,32],[[32,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],32],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[32,23],[32,23],[32,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[32,23],[32,23],[32,23],0,[33,3],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[33,33],[[33,16],17],[-1,-1,[]],[-1,-2,[],[]],[33,23],[33,23],[33,23],[[],33],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[33,23],[33,23],[33,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[33,23],[33,23],[33,23],0,[34,3],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[34,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],[[25,[34]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[],3],[[],8],[[],3],0,[35,3],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[35,35],[[35,16],17],[-1,-1,[]],[-1,-2,[],[]],[35,23],[35,23],[35,23],[[],35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[35,23],[35,23],[35,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[35,23],[35,23],[35,23],0,0,0,0,0,[36,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[37,37],[[37,37],23],[[36,16],17],[[37,16],17],[-1,-1,[]],[-1,-1,[]],[[36,38],23],[-1,-2,[],[]],[-1,-2,[],[]],[36,37],[[],[[25,[36]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[],3],[3,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[39,39],[40,40],[41,41],[42,42],[43,43],[[40,40],23],[[41,41],23],[[42,42],23],[[43,43],23],[[39,16],17],[[40,16],17],[[41,16],17],[[42,16],17],[[43,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,23],[39,23],[39,42],[39,23],[39,23],[[],39],[39,23],[41,2],[[],2],[[],2],[42,2],[[],2],[[],2],[[],2],[[],2],[43,2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[39,23],[39,23],[39,43],[39,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[39,23],[39,23],[39,23],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[39,23],[39,23],[39,40],[[],3],0,0,0,0,[44,3],[44,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[45,45],[[45,45],23],[[44,16],17],[[45,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[44,[[25,[45]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[3,45],2],0,[46,3],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[[46,16],17],[-1,-1,[]],[-1,-2,[],[]],[46,3],[[],[[25,[46]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[[],3],[3,2],[3,2],[[],18],[[3,14,13,23],2],[3,2],[3,2],[[],18],[[3,14,13,23],2],[3,2],0,0,0,0,0,0,0,[47,3],[47,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[48,48],[[48,48],23],[[47,16],17],[[48,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,48],[47,3],[[],47],[[48,3,3],2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[3,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,50],[49,49],[50,50],[51,51],[52,52],[49,3],[[50,50],23],[[51,51],23],[[52,52],23],[[50,16],17],[[51,16],17],[[52,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[3,51],[-1,-1,[]],[3,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,23],[49,23],[[],49],[50,2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[3,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[3,2],[[],2],[[],2],[53,53],[53,23],[[53,16],17],[-1,-1,[]],[[53,3],23],[-1,-2,[],[]],[53,23],[[],53],[[],2],[3,2],[[],2],[[],2],[53,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[],3],[3,2],0,[54,3],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[54,54],[[54,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],54],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[54,23],[54,23],[54,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[54,23],[54,23],[54,23],0,[55,3],[-1,-2,[],[]],[-1,-2,[],[]],[55,55],[[55,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],55],[55,23],[55,23],[55,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[55,23],[55,23],[55,23],[[],3],[3,2],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[56,56],[57,57],[[57,57],23],[[56,16],17],[[57,16],17],[-1,-1,[]],[-1,-1,[]],[56,41],[-1,-2,[],[]],[-1,-2,[],[]],[56,23],[[],56],[56,23],[41,2],[[],2],[[],2],[[],2],[57,2],[[],2],[[],2],[[],2],[56,23],[56,23],[56,57],[56,23],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[56,23],[56,23],[56,41],[[],3],[3,2],0,0,[58,3],[58,3],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[[58,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],58],[58,[[25,[45]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[3,45],2],[[],3],[[],8],[[],3],0,[59,3],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[[59,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],59],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[3,2],[[],3],[3,2],0,[60,3],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[60,60],[[60,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],60],[[],2],[[],2],[[],2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[60,23],[60,23],[60,23],0,[61,3],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[[61,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],61],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[61,23],[61,23],[61,23],[[],3],[3,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[62,62],[[62,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],62],[[],2],[[],2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[62,23],[62,23],[[],3],[3,2],0,0,[63,3],[63,3],[-1,-2,[],[]],[-1,-2,[],[]],[63,63],[[63,16],17],[-1,-1,[]],[-1,-2,[],[]],[[],63],[63,[[25,[45]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[3,45],2]],"c":[],"p":[[1,"u32"],[1,"tuple"],[1,"usize"],[5,"McycleDelay",11],[1,"u8"],[1,"i32"],[1,"u16"],[1,"u64"],[6,"Result",1504],[5,"TypeId",1505],[17,"Output"],[10,"FnOnce",1506],[6,"Permission",33],[6,"Range",33],[5,"Pmp",33],[5,"Formatter",1507],[8,"Result",1507],[5,"Pmpcsr",33],[5,"FCSR",300],[6,"Flag",300],[5,"Flags",300],[6,"RoundingMode",300],[1,"bool"],[5,"Marchid",454],[6,"Option",1508],[5,"Mcause",466],[6,"Trap",466],[6,"Interrupt",466],[6,"Exception",466],[5,"Mcounteren",544],[5,"Medeleg",570],[5,"Mideleg",830],[5,"Mie",860],[5,"Mimpid",899],[5,"Mip",914],[5,"Misa",947],[6,"MXL",947],[1,"char"],[5,"Mstatus",977],[6,"XS",977],[6,"FS",977],[6,"MPP",977],[6,"SPP",977],[5,"Mtvec",1087],[6,"TrapMode",1087],[5,"Mvendorid",1115],[5,"Satp",1168],[6,"Mode",1168],[5,"Scause",1201],[6,"Trap",1201],[6,"Interrupt",1201],[6,"Exception",1201],[5,"Scounteren",1274],[5,"Sie",1299],[5,"Sip",1329],[5,"Sstatus",1349],[6,"SPP",1349],[5,"Stvec",1398],[5,"Ucause",1417],[5,"Uie",1432],[5,"Uip",1453],[5,"Ustatus",1470],[5,"Utvec",1488]],"b":[[15,"impl-_embedded_hal_blocking_delay_DelayMs%3Cu8%3E-for-McycleDelay"],[16,"impl-_embedded_hal_blocking_delay_DelayMs%3Ci32%3E-for-McycleDelay"],[17,"impl-_embedded_hal_blocking_delay_DelayMs%3Cu16%3E-for-McycleDelay"],[18,"impl-_embedded_hal_blocking_delay_DelayMs%3Cu32%3E-for-McycleDelay"],[19,"impl-_embedded_hal_blocking_delay_DelayUs%3Ci32%3E-for-McycleDelay"],[20,"impl-_embedded_hal_blocking_delay_DelayUs%3Cu32%3E-for-McycleDelay"],[21,"impl-_embedded_hal_blocking_delay_DelayUs%3Cu16%3E-for-McycleDelay"],[22,"impl-_embedded_hal_blocking_delay_DelayUs%3Cu64%3E-for-McycleDelay"],[23,"impl-_embedded_hal_blocking_delay_DelayUs%3Cu8%3E-for-McycleDelay"]]}],\
["riscv_rt",{"doc":"Minimal startup / runtime for RISC-V CPU’s","t":"FOOOOOOOONNXNNENXOHHOOOOOOONNN","n":["TrapFrame","a0","a1","a2","a3","a4","a5","a6","a7","borrow","borrow_mut","entry","fmt","from","interrupt","into","pre_init","ra","start_rust","start_trap_rust","t0","t1","t2","t3","t4","t5","t6","try_from","try_into","type_id"],"q":[[0,"riscv_rt"],[30,"core::fmt"],[31,"core::fmt"],[32,"core::any"]],"d":["Registers saved in trap handler","","","","","","","","","","","Attribute to declare the entry point of the program","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Attribute to mark which function will be called at the …","","Rust entry point (_start_rust)","Trap entry point rust (_start_trap_rust)","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2],3],[-1,-1,[]],0,[-1,-2,[],[]],0,0,[[4,4,4],5],[1,6],0,0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]]],"c":[],"p":[[5,"TrapFrame",0],[5,"Formatter",30],[8,"Result",30],[1,"usize"],[1,"never"],[1,"tuple"],[6,"Result",31],[5,"TypeId",32]],"b":[]}],\
["shakti_riscv_hal",{"doc":"","t":"CCCCCCCFNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFSFNNNNNNNNNNNNNNNFSSSSSSSSSSSSSSFNNNNNNNNNNNNNNNSSSFSSSSSFNNNNNNNNNNNNNNNFFSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSFSSSSSSSFNNNNNNNNNNNNNNNNNNN","n":["common","ext_flash","gpio","i2c","pwm","spi","uart","MMIODerefWrapper","borrow","borrow_mut","deref","from","into","new","try_from","try_into","type_id","Flash","bitEXtracted","bit_extracted","borrow","borrow_mut","flash_clear_sr","flash_cmd_addr","flash_cmd_addr_data","flash_cmd_read","flash_cmd_to_read","flash_device_id","flash_erase","flash_read","flash_write","flash_write_enable","from","into","new","try_from","try_into","type_id","GPIOInner","I2C_OFFSET","RegistersBlock","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","I2CInner","I2C_AAS","I2C_ACK","I2C_AD0_LRB","I2C_BB","I2C_BER","I2C_ENI_LRB","I2C_ES0","I2C_INI","I2C_LAB","I2C_OFFSET","I2C_PIN","I2C_STA","I2C_STO","I2C_STS","RegistersBlock","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","CLOCK_SELECT","CONTINOUS_ONCE","INTERRUPT","PWMInner","PWMSTART","PWM_ENABLE","PWM_OFFSET","PWM_OUTPUT_ENABLE","RESET_COUNTER","RegistersBlock","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","RegisterBlock","SPIInner","SPI_OFFSET","bitEXtracted","bit_extracted","borrow","borrow","borrow_mut","borrow_mut","flash_clear_sr","flash_cmd_addr","flash_cmd_addr_data","flash_cmd_read","flash_cmd_to_read","flash_device_id","flash_erase","flash_read","flash_status_register_read","flash_write","flash_write_enable","from","from","init","into","into","new","spi_not_busy","spi_rx_enable","spi_rxne_enable","spi_tx_rx_start","try_from","try_from","try_into","try_into","type_id","type_id","BREAK_ERROR","FRAME_ERROR","OVERRUN","PARITY_ERROR","RegistersBlock","STS_RX_FULL","STS_RX_NOT_EMPTY","STS_RX_NOT_EMPTY_FLAG","STS_TX_EMPTY","STS_TX_FULL","STS_TX_FULL_FLAG","UART_OFFSET","UartInner","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","print_register_value","read_uart_char","try_from","try_from","try_into","try_into","type_id","type_id","write_uart_char","write_uart_string"],"q":[[0,"shakti_riscv_hal"],[7,"shakti_riscv_hal::common"],[17,"shakti_riscv_hal::ext_flash"],[38,"shakti_riscv_hal::gpio"],[56,"shakti_riscv_hal::i2c"],[87,"shakti_riscv_hal::pwm"],[112,"shakti_riscv_hal::spi"],[148,"shakti_riscv_hal::uart"],[180,"core::result"],[181,"core::any"]],"d":["Common device driver code.","","SHAKTI is an open-source initiative by the Reconfigurable …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create an instance.","","","","","","@fn int bitExtracted(int number, int k, int p) @brief …","","","@fn int flash_clear_sr(void) @brief to reset the status …","@fn int flash_cmd_addr(int command, int addr) @brief Use …","@fn void flash_cmd_addr_data(int command, int addr, int …","@fn int flash_cmd_read(int command) @brief usefull for …","@fn int flash_cmd_to_read(int command, int addr) @briefUse …","","@fn  void flash_erase(int address) @brief Erase the flash …","@fn int flash_read(int address) @brief read the 4bytes …","@fn void flash_write(int address, int data) @brief  Write …","@fn int flash_write_enable(void) @brief to set the WEL …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","@fn int bitExtracted(int number, int k, int p) @brief …","","","","","@fn int flash_clear_sr(void) @brief to reset the status …","@fn int flash_cmd_addr(int command, int addr) @brief Use …","@fn void flash_cmd_addr_data(int command, int addr, int …","@fn int flash_cmd_read(int command) @brief usefull for …","@fn int flash_cmd_to_read(int command, int addr) @briefUse …","","@fn  void flash_erase(int address) @brief Erase the flash …","@fn int flash_read(int address) @brief read the 4bytes …","","@fn void flash_write(int address, int data) @brief  Write …","@fn int flash_write_enable(void) @brief to set the WEL …","Returns the argument unchanged.","Returns the argument unchanged.","@fn void spi_init(void) @brief setting up baud rate and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","@fn void spi_rx_enable(void) @brief to start receive state …","","@fn  void spi_tx_rx_start(void) @brief to start receiving …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,9,17,9,17,9,17,9,17,9,9,17,9,17,9,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,18,10,18,10,18,10,18,10,10,18,10,18,10,18,0,0,0,0,0,0,0,0,0,0,11,19,11,19,11,19,11,19,11,11,19,11,19,11,19,0,0,0,8,8,8,20,8,20,8,8,8,8,8,8,8,8,8,8,8,8,20,8,8,20,8,8,8,8,8,8,20,8,20,8,20,0,0,0,0,0,0,0,0,0,0,0,0,0,13,21,13,21,13,21,13,21,13,13,13,13,21,13,21,13,21,13,13],"f":[0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[2,[[1,[-1]]],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],0,[[5,6,6,6],6],[[6,6,6],6],[-1,-2,[],[]],[-1,-2,[],[]],[5,7],[[5,6,6],7],[[5,6,6,6],7],[[5,6],7],[[5,6,6],7],[5,7],[[5,6],7],[[5,6],7],[[5,6,6],7],[5,7],[-1,-1,[]],[-1,-2,[],[]],[8,5],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,9],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,10],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,11],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],0,0,0,[[8,6,6,6],6],[[6,6,6],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,6],[[8,6,6],6],[[8,6,6,6],7],[[8,6],6],[[8,6,6],6],[8,6],[[8,6],7],[[8,6],6],[8,7],[[8,6,6],7],[8,7],[-1,-1,[]],[-1,-1,[]],[8,7],[-1,-2,[],[]],[-1,-2,[],[]],[2,8],[8,7],[8,7],[8,12],[8,7],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,13],[13,14],[13,7],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],[[13,15],7],[[13,16],7]],"c":[],"p":[[5,"MMIODerefWrapper",7],[1,"usize"],[6,"Result",180],[5,"TypeId",181],[5,"Flash",17],[1,"u32"],[1,"tuple"],[5,"SPIInner",112],[5,"GPIOInner",38],[5,"I2CInner",56],[5,"PWMInner",87],[1,"bool"],[5,"UartInner",148],[1,"u8"],[1,"char"],[1,"str"],[5,"RegistersBlock",38],[5,"RegistersBlock",56],[5,"RegistersBlock",87],[5,"RegisterBlock",112],[5,"RegistersBlock",148]],"b":[]}],\
["tock_registers",{"doc":"Tock Register Interface","t":"FKKNNQNNNCNNNCNNCNNNNNNQQQQCNQNNNNMRFFKNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNMNNNNNNNNNNORRRKKRRRKNNMNNNMNNNMNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["LocalRegisterCopy","RegisterLongName","UIntLike","any_matching_bits_set","bitand","bitmask","borrow","borrow_mut","clone","fields","fmt","from","get","interfaces","into","is_set","macros","matches_all","matches_any","modify","new","read","read_as_enum","register_bitfields","register_bitmasks","register_fields","register_structs","registers","set","test_fields","try_from","try_into","type_id","write","zero","EnumType","Field","FieldValue","TryFromValue","add","add_assign","any_matching_bits_set","borrow","borrow","borrow_mut","borrow_mut","clone","clone","from","from","into","into","is_set","mask","mask","matches_all","modify","new","new","new","new","new","new","new","none","read","read","read_as_enum","shift","try_from","try_from","try_from_value","try_into","try_into","type_id","type_id","val","val","val","val","val","val","value","R","R","R","ReadWriteable","Readable","T","T","T","Writeable","any_matching_bits_set","extract","get","is_set","matches_all","matches_any","modify","modify_no_read","read","read_as_enum","set","write","Aliased","InMemoryRegister","ReadOnly","ReadWrite","WriteOnly","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","get","get","get","get","into","into","into","into","into","modify","modify","modify","new","set","set","set","set","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"tock_registers"],[35,"tock_registers::fields"],[83,"tock_registers::interfaces"],[104,"tock_registers::registers"],[156,"core::clone"],[157,"core::fmt"],[158,"core::fmt"],[159,"core::result"],[160,"core::any"]],"d":["A read-write copy of register contents.","Descriptive name for each register.","Trait representing the base type of registers.","Check if any bits corresponding to the mask in the passed …","Do a bitwise AND operation of the stored value and the …","Helper macro for computing bitmask of variable number of …","","","","Register bitfield types and macros","","Returns the argument unchanged.","Get the raw register value","Interfaces (traits) to register types","Calls <code>U::from(self)</code>.","Check if one or more bits in a field are set","Macros for cleanly defining peripheral registers.","Check if all specified parts of a field match","Check if any of the passed parts of a field exactly match …","Write the value of one or more fields, leaving the other …","","Read the value of the given field","Read value of the given field as an enum member","Define register types and fields.","Helper macro for defining register fields.","","","Implementation of included register types.","Set the raw register value","Statically validate the size and offsets of the fields …","","","","Write the value of one or more fields, overwriting the …","Return the representation of the value <code>0</code> in the …","","Specific section of a register.","Values for the specific register fields.","Conversion of raw register value into enumerated values …","","","Check if any of the bits covered by the mask for this …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if one or more bits in a field are set","Get the raw bitmask represented by this FieldValue.","","Check if all specified parts of a field match","Modify fields in a register value","","","","","","","","","","","Read value of the field as an enum member","","","","","","","","","","","","","","","","","","","<code>Readable</code> and <code>Writeable</code> register, over the same …","Readable register","","","","Writeable register","Check if any bits corresponding to the mask in the passed …","Make a local copy of the register","Get the raw register value","Check if one or more bits in a field are set","Check if all specified parts of a field match","Check if any of the passed parts of a field exactly match …","Write the value of one or more fields, leaving the other …","Write the value of one or more fields, maintaining the …","Read the value of the given field","Set the raw register value","Set the raw register value","Write the value of one or more fields, overwriting the …","Read-only and write-only registers aliased to the same …","In memory volatile register.","Read-only registers.","Read/Write registers.","Write-only registers.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,4,15,0,0,0,2,2,2,10,2,10,2,10,2,10,2,10,2,10,2,10,2,2,10,2,2,2,2,2,2,2,10,2,10,10,10,2,15,10,2,10,2,10,10,10,10,10,10,2,26,28,27,0,0,26,28,27,0,26,26,26,26,26,26,27,28,26,26,28,28,0,0,0,0,0,29,30,33,31,32,29,30,33,31,32,29,30,33,31,32,29,30,31,32,29,30,33,31,32,29,31,32,32,29,33,31,32,29,30,33,31,32,29,30,33,31,32,29,30,33,31,32],"f":[0,0,0,[[[1,[-1,-2]],[2,[-1,-2]]],3,4,5],[[[1,[-1,-2]],-1],[[1,[-1,-2]]],4,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[1,[-1,-2]]],[6,4],[6,5]],0,[[[1,[-1,-2]],7],8,[4,9],5],[-1,-1,[]],[[[1,[-1,-2]]],-1,4,5],0,[-1,-2,[],[]],[[[1,[-1,-2]],[10,[-1,-2]]],3,4,5],0,[[[1,[-1,-2]],[2,[-1,-2]]],3,4,5],[[[1,[-1,-2]],[11,[[2,[-1,-2]]]]],3,4,5],[[[1,[-1,-2]],[2,[-1,-2]]],12,4,5],[-1,[[1,[-1,-2]]],4,5],[[[1,[-1,-2]],[10,[-1,-2]]],-1,4,5],[[[1,[-1,-2]],[10,[-1,-2]]],[[13,[-3]]],4,5,[[15,[-1],[[14,[]]]]]],0,0,0,0,0,[[[1,[-1,-2]],-1],12,4,5],0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[[[1,[-1,-2]],[2,[-1,-2]]],12,4,5],[[],4],0,0,0,0,[[[2,[-1,-2]],[2,[-1,-2]]],[[2,[-1,-2]]],4,5],[[[2,[-1,-2]],[2,[-1,-2]]],12,4,5],[[[2,[-1,-2]],-1],3,4,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,-2]]],[[10,[-1,-2]]],4,5],[[[2,[-1,-2]]],[[2,[-1,-2]]],[6,4],[6,5]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,-2]],-1],3,4,5],[[[2,[-1,-2]]],-1,4,5],0,[[[2,[-1,-2]],-1],3,4,5],[[[2,[-1,-2]],-1],-1,4,5],[[-1,18],[[10,[-1,-2]]],4,5],[[19,18,19],[[2,[19,-1]]],5],[[18,18,18],[[2,[18,-1]]],5],[[20,18,20],[[2,[20,-1]]],5],[[21,18,21],[[2,[21,-1]]],5],[[22,18,22],[[2,[22,-1]]],5],[[23,18,23],[[2,[23,-1]]],5],[[],[[2,[-1,-2]]],4,5],[[[10,[-1,-2]],-1],-1,4,5],[[[2,[-1,-2]],[10,[-1,-2]]],-1,4,5],[[[10,[-1,-2]],-1],[[13,[-3]]],4,5,[[15,[-1],[[14,[]]]]]],0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[[[10,[20,-1]],20],[[2,[20,-1]]],5],[[[10,[19,-1]],19],[[2,[19,-1]]],5],[[[10,[23,-1]],23],[[2,[23,-1]]],5],[[[10,[22,-1]],22],[[2,[22,-1]]],5],[[[10,[21,-1]],21],[[2,[21,-1]]],5],[[[10,[18,-1]],18],[[2,[18,-1]]],5],0,0,0,0,0,0,0,0,0,0,[[[26,[],[[24,[-1]],[25,[-2]]]],[2,[-1,-2]]],3,4,5],[[[26,[],[[24,[-1]],[25,[-2]]]]],[[1,[-1,-2]]],4,5],[[[26,[],[[24,[-1]],[25,[-2]]]]],-1,4,5],[[[26,[],[[24,[-1]],[25,[-2]]]],[10,[-1,-2]]],3,4,5],[[[26,[],[[24,[-1]],[25,[-2]]]],[2,[-1,-2]]],3,4,5],[[[26,[],[[24,[-1]],[25,[-2]]]],[11,[[2,[-1,-2]]]]],3,4,5],[[[27,[],[[24,[-1]],[25,[-2]]]],[2,[-1,-2]]],12,4,5],[[[28,[],[[24,[-1]],[25,[-2]]]],[1,[-1,-2]],[2,[-1,-2]]],12,4,5],[[[26,[],[[24,[-1]],[25,[-2]]]],[10,[-1,-2]]],-1,4,5],[[[26,[],[[24,[-1]],[25,[-2]]]],[10,[-1,-2]]],[[13,[-3]]],4,5,[[15,[-1],[[14,[]]]]]],[[[28,[],[[24,[-1]],[25,[-2]]]],-1],12,4,5],[[[28,[],[[24,[-1]],[25,[-2]]]],[2,[-1,-2]]],12,4,5],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[29,[-1,-2]]],-3,4,5,[]],[[[30,[-1,-2]]],-1,4,5],[[[31,[-1,-2,-3]]],-4,4,5,5,[]],[[[32,[-1,-2]]],-3,4,5,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,2],12,[]],[[-1,2],12,[]],[[-1,2],12,[]],[-1,[[32,[-1,-2]]],4,5],[[[29,[-1,-2]],-1],12,4,5],[[[33,[-1,-2]],-1],12,4,5],[[[31,[-1,-2,-3]],-4],12,4,5,5,[]],[[[32,[-1,-2]],-1],12,4,5],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]]],"c":[],"p":[[5,"LocalRegisterCopy",0],[5,"FieldValue",35],[1,"bool"],[10,"UIntLike",0],[10,"RegisterLongName",0],[10,"Clone",156],[5,"Formatter",157],[8,"Result",157],[10,"Debug",157],[5,"Field",35],[1,"slice"],[1,"tuple"],[6,"Option",158],[17,"EnumType"],[10,"TryFromValue",35],[6,"Result",159],[5,"TypeId",160],[1,"usize"],[1,"u16"],[1,"u128"],[1,"u64"],[1,"u32"],[1,"u8"],[17,"T"],[17,"R"],[10,"Readable",83],[10,"ReadWriteable",83],[10,"Writeable",83],[5,"ReadWrite",104],[5,"ReadOnly",104],[5,"Aliased",104],[5,"InMemoryRegister",104],[5,"WriteOnly",104]],"b":[[58,"impl-FieldValue%3Cu16,+R%3E"],[59,"impl-FieldValue%3Cusize,+R%3E"],[60,"impl-FieldValue%3Cu128,+R%3E"],[61,"impl-FieldValue%3Cu64,+R%3E"],[62,"impl-FieldValue%3Cu32,+R%3E"],[63,"impl-FieldValue%3Cu8,+R%3E"],[76,"impl-Field%3Cu128,+R%3E"],[77,"impl-Field%3Cu16,+R%3E"],[78,"impl-Field%3Cu8,+R%3E"],[79,"impl-Field%3Cu32,+R%3E"],[80,"impl-Field%3Cu64,+R%3E"],[81,"impl-Field%3Cusize,+R%3E"]]}],\
["vcell",{"doc":"Just like <code>Cell</code> but with volatile read / write operations","t":"FNNNNNNNNNNN","n":["VolatileCell","as_ptr","borrow","borrow_mut","from","get","into","new","set","try_from","try_into","type_id"],"q":[[0,"vcell"],[12,"core::marker"],[13,"core::result"],[14,"core::any"]],"d":["Just like <code>Cell</code> but with volatile read / write operations","Returns a raw pointer to the underlying data in the cell","","","Returns the argument unchanged.","Returns a copy of the contained value","Calls <code>U::from(self)</code>.","Creates a new <code>VolatileCell</code> containing the given value","Sets the contained value","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[[1,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[[1,[-1]]],-1,2],[-1,-2,[],[]],[-1,[[1,[-1]]],[]],[[[1,[-1]],-1],3,2],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]]],"c":[],"p":[[5,"VolatileCell",0],[10,"Copy",12],[1,"tuple"],[6,"Result",13],[5,"TypeId",14]],"b":[]}],\
["void",{"doc":"Void","t":"KKGNNNNNNNNNNNNHMM","n":["ResultVoidErrExt","ResultVoidExt","Void","borrow","borrow_mut","clone","eq","fmt","fmt","from","into","partial_cmp","try_from","try_into","type_id","unreachable","void_unwrap","void_unwrap_err"],"q":[[0,"void"],[18,"core::fmt"],[19,"core::fmt"],[20,"core::option"],[21,"core::result"],[22,"core::any"]],"d":["Extensions to <code>Result&lt;Void, E&gt;</code>","Extensions to <code>Result&lt;T, Void&gt;</code>","The empty type for cases which can’t occur.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A safe version of <code>intrinsincs::unreachable</code>.","Get the value out of a wrapper.","Get the error out of a wrapper."],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,10,11],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[1,-1],2,[]],[[1,3],4],[[1,3],4],[-1,-1,[]],[-1,-2,[],[]],[[1,-1],[[6,[5]]],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[1,9],[10,-1,[]],[11,-1,[]]],"c":[],"p":[[6,"Void",0],[1,"bool"],[5,"Formatter",18],[8,"Result",18],[6,"Ordering",19],[6,"Option",20],[6,"Result",21],[5,"TypeId",22],[1,"never"],[10,"ResultVoidExt",0],[10,"ResultVoidErrExt",0]],"b":[[7,"impl-Display-for-Void"],[8,"impl-Debug-for-Void"]]}],\
["volatile_register",{"doc":"Volatile access to memory mapped hardware registers","t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["RO","RW","WO","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","modify","read","read","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write"],"q":[[0,"volatile_register"],[29,"core::marker"],[30,"core::ops::function"],[31,"core::result"],[32,"core::any"]],"d":["Read-Only register","Read-Write register","Write-Only register","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs a read-modify-write operation","Reads the value of the register","Reads the value of the register","","","","","","","","","","Writes a <code>value</code> into the register","Writes <code>value</code> into the register"],"i":[0,0,0,6,1,9,6,1,9,6,1,9,6,1,9,1,6,1,6,1,9,6,1,9,6,1,9,1,9],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],-2],2,3,[[5,[-1],[[4,[-1]]]]]],[[[6,[-1]]],-1,3],[[[1,[-1]]],-1,3],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[[1,[-1]],-1],2,3],[[[9,[-1]],-1],2,3]],"c":[],"p":[[5,"RW",0],[1,"tuple"],[10,"Copy",29],[17,"Output"],[10,"FnOnce",30],[5,"RO",0],[6,"Result",31],[5,"TypeId",32],[5,"WO",0]],"b":[]}]\
]'));
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
